<?php

/**
 * @file
 * Bulk export of objects generated by Bulk export module.
 */

/**
 * Implements hook_views_api().
 */
function wk_config_views_api($module, $api) {
  if ($module == 'views' && $api == 'views_default') {
    return array('version' => 2);
  }
}

/**
 * Implements hook_ctools_plugin_api().
 */
function wk_config_ctools_plugin_api($module, $api) {
  if ($module == 'corresponding_node_references' && $api == 'default_corresponding_node_references_presets') {
    return array('version' => 1);
  }
  if ($module == 'file_entity' && $api == 'file_type') {
    return array('version' => 1);
  }
  if ($module == 'file_entity' && $api == 'file_default_displays') {
    return array('version' => 1);
  }
  if ($module == 'strongarm' && $api == 'strongarm') {
    return array('version' => 1);
  }
  if ($module == 'field_group' && $api == 'field_group') {
    return array('version' => 1);
  }
}
/**
 * Implements hook_default_fe_block_boxes().
 */
function wk_config_default_fe_block_boxes() {
  $fe_block_boxess = array();

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'activities';
  $fe_block_boxess['activities'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'calendar_feeds';
  $fe_block_boxess['calendar_feeds'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'contact_officer_footer';
  $fe_block_boxess['contact_officer_footer'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'event_submission_form_link';
  $fe_block_boxess['event_submission_form_link'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'fighters_schedule';
  $fe_block_boxess['fighters_schedule'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'resources';
  $fe_block_boxess['resources'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'sponsored';
  $fe_block_boxess['sponsored'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'universal_footer';
  $fe_block_boxess['universal_footer'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'wawars_gustatory_block';
  $fe_block_boxess['wawars_gustatory_block'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'wawar_autocrat_team';
  $fe_block_boxess['wawar_autocrat_team'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'wawar_classes';
  $fe_block_boxess['wawar_classes'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'wawar_footer_2_links';
  $fe_block_boxess['wawar_footer_2_links'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'wawar_map_embed';
  $fe_block_boxess['wawar_map_embed'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'wawar_merchants';
  $fe_block_boxess['wawar_merchants'] = $fe_block_boxes;

  $fe_block_boxes = new stdClass();
  $fe_block_boxes->machine_name = 'wawar_volunteer';
  $fe_block_boxess['wawar_volunteer'] = $fe_block_boxes;

  return $fe_block_boxess;
}

/**
 * Implements hook_image_default_styles().
 */
function wk_config_image_default_styles() {
  $styles = array();

  // Exported image style: thumbnail.
  $styles['thumbnail'] = array(
    'label' => 'Thumbnail (100x100)',
    'effects' => array(
      0 => array(
        'label' => 'Scale',
        'help' => 'Scaling will maintain the aspect-ratio of the original image. If only a single dimension is specified, the other dimension will be calculated.',
        'effect callback' => 'image_scale_effect',
        'dimensions callback' => 'image_scale_dimensions',
        'form callback' => 'image_scale_form',
        'summary theme' => 'image_scale_summary',
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => 100,
          'height' => 100,
          'upscale' => 1,
        ),
        'weight' => 0,
      ),
    ),
    'name' => 'thumbnail',
  );

  // Exported image style: medium.
  $styles['medium'] = array(
    'label' => 'Medium (220x220)',
    'effects' => array(
      0 => array(
        'label' => 'Scale',
        'help' => 'Scaling will maintain the aspect-ratio of the original image. If only a single dimension is specified, the other dimension will be calculated.',
        'effect callback' => 'image_scale_effect',
        'dimensions callback' => 'image_scale_dimensions',
        'form callback' => 'image_scale_form',
        'summary theme' => 'image_scale_summary',
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => 220,
          'height' => 220,
          'upscale' => 1,
        ),
        'weight' => 0,
      ),
    ),
    'name' => 'medium',
  );

  // Exported image style: large.
  $styles['large'] = array(
    'label' => 'Large (480x480)',
    'effects' => array(
      0 => array(
        'label' => 'Scale',
        'help' => 'Scaling will maintain the aspect-ratio of the original image. If only a single dimension is specified, the other dimension will be calculated.',
        'effect callback' => 'image_scale_effect',
        'dimensions callback' => 'image_scale_dimensions',
        'form callback' => 'image_scale_form',
        'summary theme' => 'image_scale_summary',
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => 480,
          'height' => 480,
          'upscale' => 0,
        ),
        'weight' => 0,
      ),
    ),
    'name' => 'large',
  );

  // Exported image style: media_thumbnail.
  $styles['media_thumbnail'] = array(
    'label' => 'Media thumbnail (100x100)',
    'effects' => array(
      0 => array(
        'label' => 'Scale and crop',
        'help' => 'Scale and crop will maintain the aspect-ratio of the original image, then crop the larger dimension. This is most useful for creating perfectly square thumbnails without stretching the image.',
        'effect callback' => 'image_scale_and_crop_effect',
        'dimensions callback' => 'image_resize_dimensions',
        'form callback' => 'image_resize_form',
        'summary theme' => 'image_resize_summary',
        'module' => 'image',
        'name' => 'image_scale_and_crop',
        'data' => array(
          'width' => 100,
          'height' => 100,
        ),
        'weight' => 0,
      ),
    ),
    'name' => 'media_thumbnail',
  );

  // Exported image style: full_width.
  $styles['full_width'] = array(
    'name' => 'full_width',
    'label' => 'full_width',
    'effects' => array(
      1 => array(
        'label' => 'Scale',
        'help' => 'Scaling will maintain the aspect-ratio of the original image. If only a single dimension is specified, the other dimension will be calculated.',
        'effect callback' => 'image_scale_effect',
        'dimensions callback' => 'image_scale_dimensions',
        'form callback' => 'image_scale_form',
        'summary theme' => 'image_scale_summary',
        'module' => 'image',
        'name' => 'image_scale',
        'data' => array(
          'width' => '1200',
          'height' => '',
          'upscale' => 0,
        ),
        'weight' => '1',
      ),
    ),
  );

  return $styles;
}

/**
 * Implements hook_default_entityform_type().
 */
function wk_config_default_entityform_type() {
  $items = array();
  $items['regnum_change'] = entity_import('entityform_type', '{
    "type" : "regnum_change",
    "label" : "Regnum Change",
    "data" : {
      "draftable" : 0,
      "draft_button_text" : "",
      "draft_save_text" : { "value" : "", "format" : "1" },
      "submission_rules" : [],
      "validation_rules" : [],
      "submit_button_text" : "",
      "submission_page_title" : "Regnum Change Notification Submitted",
      "submission_text" : {
        "value" : "\\u003Cp\\u003EThe recognition or approval of this submission will usually be done by the Seneschal of the appropriate group, or by proxy by the Web Minister. \\u0026nbsp;Approvals of deputy assignments can be done directly by the officer in charge. \\u0026nbsp;The appropriate parties will be notified of this request, and will infom you once it is processed. \\u0026nbsp;To check on the status of your submission, please contact the Web Minister.\\u003C\\/p\\u003E",
        "format" : "1"
      },
      "submission_show_submitted" : 0,
      "submissions_view" : "entityforms",
      "user_submissions_view" : "user_entityforms",
      "form_status" : "ENTITYFORM_OPEN",
      "roles" : { "2" : "2", "1" : "1", "3" : 0, "4" : 0, "6" : 0, "5" : 0 },
      "resubmit_action" : "new",
      "access_rules" : [],
      "redirect_path" : "",
      "instruction_pre" : {
        "value" : "\\u003Cp\\u003EPlease fill out this form to notify the appropriate Kingdom officers changes in information in the Kingdom or associated branch groups. Submitting this form will notify all Kingdom Officers who are involved with maintaining organizational information, including publication in the Page, email address forwards from standard Kingdom addresses to personal addresses, and website contact forms.\\u003C\\/p\\u003E\\u003Cp\\u003E\\u003Cstrong\\u003EIMPORTANT:\\u003C\\/strong\\u003E This form is only for notifying websites, The Page, and other interested parties of Royalty Coronations and Investitures, Office changeovers, and other informational updates.\\u0026nbsp; It \\u003Cem\\u003E\\u003Cstrong\\u003Edoes not\\u003C\\/strong\\u003E\\u003C\\/em\\u003E replace the warranting process, which is still in effect and must be followed.\\u0026nbsp; All submissions of this form are sent to the Regnum email address; however, as this form is not yet official, the recipients of this message might not take action unless specific instructions are included in the comment section, below.\\u003C\\/p\\u003E",
        "format" : "1"
      }
    },
    "weight" : "0",
    "paths" : {
      "submit" : {
        "source" : "eform\\/submit\\/regnum-change",
        "alias" : "regnum",
        "language" : "und"
      },
      "confirm" : {
        "source" : "eform\\/regnum-change\\/confirm",
        "alias" : "regnum-confirm",
        "language" : "und"
      }
    }
  }');
  $items['who_s_who_update'] = entity_import('entityform_type', '{
    "type" : "who_s_who_update",
    "label" : "Who\\u0027s Who Update",
    "data" : {
      "draftable" : 0,
      "draft_button_text" : "",
      "draft_save_text" : { "value" : "", "format" : "1" },
      "submission_rules" : { "rules_email_historian" : "rules_email_historian" },
      "validation_rules" : [],
      "submit_button_text" : "",
      "submission_page_title" : "",
      "submission_text" : { "value" : "", "format" : "1" },
      "submission_show_submitted" : 0,
      "submissions_view" : "entityforms",
      "user_submissions_view" : "user_entityforms",
      "form_status" : "ENTITYFORM_OPEN",
      "roles" : { "2" : "2", "1" : "1", "3" : 0, "4" : 0, "6" : 0, "5" : 0 },
      "resubmit_action" : "new",
      "access_rules" : [],
      "redirect_path" : "",
      "instruction_pre" : {
        "value" : "\\u003Cp\\u003EEnter as much of the appropriate information below as you can, and click the Submit button to send to the History Website web minister.\\u003C\\/p\\u003E\\u003Cp\\u003E\\u003Cstrong\\u003ENOTE:\\u0026nbsp;\\u003C\\/strong\\u003EPlease fill this out as best you can with as much information as you are comfortable with providing. You are not required to fill out all of the data below, but an empty form will not be processed. SCA Name and EMail address are required.\\u003C\\/p\\u003E",
        "format" : "1"
      }
    },
    "weight" : "0",
    "paths" : {
      "submit" : {
        "source" : "eform\\/submit\\/who-s-who-update",
        "alias" : "whos-who",
        "language" : "und"
      },
      "confirm" : {
        "source" : "eform\\/who-s-who-update\\/confirm",
        "alias" : "whos-who-confirm",
        "language" : "und"
      }
    }
  }');
  $items['photographer_release_form_submis'] = entity_import('entityform_type', '{
    "type" : "photographer_release_form_submis",
    "label" : "Photographer Release Form Submission",
    "data" : {
      "draftable" : 0,
      "draft_button_text" : "",
      "draft_save_text" : { "value" : "", "format" : "1" },
      "submission_rules" : [],
      "validation_rules" : [],
      "submit_button_text" : "",
      "submission_page_title" : "",
      "submission_text" : { "value" : "", "format" : "1" },
      "submission_show_submitted" : 0,
      "submissions_view" : "entityforms",
      "user_submissions_view" : "user_entityforms",
      "form_status" : "ENTITYFORM_OPEN",
      "roles" : { "2" : "2", "1" : "1", "3" : 0, "4" : 0, "6" : 0, "5" : 0 },
      "resubmit_action" : "new",
      "access_rules" : [],
      "redirect_path" : "",
      "instruction_pre" : {
        "value" : "\\u003Cp\\u003EIf you take photographs that you would like to appear on West Kingdom websites, please download the \\u003Ca href=\\u0022http:\\/\\/www.sca.org\\/docs\\/pdf\\/ReleasePhotographerFillable.pdf\\u0022\\u003EPhotographer Release Form\\u003C\\/a\\u003E, and save it on your computer. Rename the file so that it includes your SCA name, and then open it in Acrobat Reader and fill out all of the fields. It is most convenient to check the \\u0026quot;Perpetual Grants of Use\\u0026quot; box to allow any photograph you take to be used on any SCA Website. If you do this, you may still request individual photos be removed from the site. Be sure to e-sign the form, and then upload the resulting file here.\\u003C\\/p\\u003E\\u003Cp\\u003E\\u003Cstrong\\u003En.b.:\\u003C\\/strong\\u003E You may fill out this form on your computer; if you use the built-in e-sign feature of Acrobat Reader, then it is \\u003Cem\\u003Enot\\u003C\\/em\\u003E necessary to print, sign and scan the form.\\u003C\\/p\\u003E",
        "format" : "1"
      }
    },
    "weight" : "0",
    "paths" : { "submit" : {
        "source" : "eform\\/submit\\/photographer-release-form-submis",
        "alias" : "photographer-release",
        "language" : "und"
      }
    }
  }');
  $items['calendar_date_request'] = entity_import('entityform_type', '{
    "type" : "calendar_date_request",
    "label" : "Calendar Date Request",
    "data" : {
      "draftable" : 0,
      "draft_button_text" : "",
      "draft_save_text" : { "value" : "", "format" : "1" },
      "submission_rules" : {
        "rules_notify_calendar_deputy" : "rules_notify_calendar_deputy",
        "rules_notify_submitter_of_approved_calendar_date_request" : "rules_notify_submitter_of_approved_calendar_date_request"
      },
      "validation_rules" : [],
      "submit_button_text" : "Request Dates",
      "submission_page_title" : "",
      "submission_text" : { "value" : "", "format" : "1" },
      "submission_show_submitted" : 0,
      "submissions_view" : "entityforms",
      "user_submissions_view" : "user_entityforms",
      "form_status" : "ENTITYFORM_OPEN",
      "roles" : { "2" : "2", "1" : "1", "3" : 0, "4" : 0, "6" : 0, "5" : 0 },
      "resubmit_action" : "new",
      "access_rules" : [],
      "redirect_path" : "",
      "instruction_pre" : {
        "value" : "\\u003Cp\\u003EIMPORTANT: Only fill out the form below for EVENTS. \\u0026nbsp;If you would like to put a recurring MEETING or PRACTICE on the calendar, please \\u003Ca href=\\u0022http:\\/\\/www.westkingdom.org\\/officer\\/kingdom-west\\/web-minister\\/contact\\u0022\\u003Econtact the Web Minister\\u003C\\/a\\u003E. \\u0026nbsp;We hope to automate the meeting and practice process in the future.\\u003C\\/p\\u003E\\u003Cp\\u003EOnly the \\u003Cem\\u003E\\u003Cstrong\\u003Esponsoring branch Seneschal \\u003C\\/strong\\u003E\\u003C\\/em\\u003Ecan submit a calendar request. This short form does not require all the event details, but is meant for securing dates in advance of having all the details and event promotional copy content.\\u003C\\/p\\u003E\\u003Cp\\u003EIn addition to the first-choice event date selection, up to two additional alternate dates may be listed, to be used in case of a conflict with some other event. \\u0026nbsp;For information on how conflicts are defined and resolved, see the \\u003Ca href=\\u0022http:\\/\\/seneschal.westkingdom.org\\/Calendar_Policy.php\\u0022\\u003Ecalendar policy\\u003C\\/a\\u003E.\\u003C\\/p\\u003E",
        "format" : "1"
      }
    },
    "weight" : "0",
    "paths" : { "submit" : {
        "source" : "eform\\/submit\\/calendar-date-request",
        "alias" : "calendar-date-request",
        "language" : "und"
      }
    }
  }');
  return $items;
}

/**
 * Implements hook_default_og_membership_type().
 */
function wk_config_default_og_membership_type() {
  $items = array();
  $items['og_membership_type_default'] = entity_import('og_membership_type', '{
    "name" : "og_membership_type_default",
    "description" : "Default",
    "language" : "en"
  }');
  return $items;
}

/**
 * Implements hook_default_rules_configuration().
 */
function wk_config_default_rules_configuration() {
  $items = array();
  $items['rules_set_event_type_to_event'] = entity_import('rules_config', '{ "rules_set_event_type_to_event" : {
      "LABEL" : "Set event type to Event",
      "PLUGIN" : "rule",
      "REQUIRES" : [ "rules" ],
      "USES VARIABLES" : { "node_parameter" : { "label" : "Node Parameter", "type" : "node" } },
      "IF" : [
        { "entity_has_field" : { "entity" : [ "node-parameter" ], "field" : "field_event_type" } }
      ],
      "DO" : [
        { "data_set" : { "data" : [ "node-parameter:field-event-type" ], "value" : "0" } }
      ]
    }
  }');
  $items['rules_email_historian'] = entity_import('rules_config', '{ "rules_email_historian" : {
      "LABEL" : "Notify historian",
      "PLUGIN" : "rule",
      "TAGS" : [ "entityform submission" ],
      "REQUIRES" : [ "rules" ],
      "USES VARIABLES" : {
        "entityform" : { "label" : "Submitted Entityform", "type" : "entityform" },
        "entityform_type" : { "label" : "Entityform Type", "type" : "entityform_type" }
      },
      "IF" : [ { "entity_is_new" : { "entity" : [ "entityform" ] } } ],
      "DO" : [
        { "mail" : {
            "to" : "\\u003Chistorian@westkingdom.org\\u003E, \\u003Cwkweb@reetstreet.com\\u003E",
            "subject" : "Who\\u0027s Who submission for [entityform:field-society-name]",
            "message" : "Society Name:    [entityform:field_society_name]\\r\\nEmail address:   [entityform:field_email_address]\\r\\nPreferred Title:   [entityform:field_preferred_title]\\r\\nBranch Group:    [entityform:taxonomy_vocabulary_2]\\r\\n\\r\\nAwards from Other Kingdoms:\\r\\n[entityform:field_awards_from_other_kingdoms]\\r\\n\\r\\nOffices Held:\\r\\n[entityform:field_offices_held]\\r\\n\\r\\nHousehold Affiliations:\\r\\n[entityform:field-household-affiliations]\\r\\n\\r\\nPersonal Relationships:\\r\\n[entityform:field-personal-relationships]\\r\\n\\r\\nShort Biography:\\r\\n[entityform:field_short_biography]\\r\\n\\r\\nNotes \\/ Comments \\/ Suggestions:\\r\\n[entityform:field_notes_comments_suggestions]\\r\\n\\r\\nThe full submission is available at:\\r\\n[entityform:url]",
            "from" : "[entityform:field-email-address]",
            "language" : [ "" ]
          }
        }
      ]
    }
  }');
  $items['rules_notify_calendar_deputy'] = entity_import('rules_config', '{ "rules_notify_calendar_deputy" : {
      "LABEL" : "Notify calendar deputy of new calendar date request",
      "PLUGIN" : "rule",
      "TAGS" : [ "entityform submission" ],
      "REQUIRES" : [ "rules" ],
      "USES VARIABLES" : {
        "entityform" : { "label" : "Submitted Entityform", "type" : "entityform" },
        "entityform_type" : { "label" : "Entityform Type", "type" : "entityform_type" }
      },
      "IF" : [ { "entity_is_new" : { "entity" : [ "entityform" ] } } ],
      "DO" : [
        { "mail" : {
            "to" : "\\u003Ccalendar@westkingdom.org\\u003E, \\u003Cchronicler@westkingdom.org\\u003E, \\u003Cwebminister@westkingdom.org\\u003E, \\u003Cseneschal@westkingdom.org\\u003E",
            "subject" : "Calendar date request: [entityform:field-event-name]",
            "message" : "Event Name:  [entityform:field-event-name]\\r\\nBranch Group: [entityform:taxonomy-vocabulary-2]\\r\\nSeneschal name: [entityform:field-society-name]\\r\\n\\r\\nFirst choice event date: [entityform:field-first-choice-date:value] - [entityform:field-first-choice-date:value2]\\r\\nAlternate date: [entityform:field_alternate_date]\\r\\nSecond alternate: [entityform:field_second_alternate_date]\\r\\nSeneschal email address: [entityform:field-email-address]\\r\\n\\r\\nAdditional information:\\r\\n[entityform:field-additional-information]\\r\\n\\r\\nOptional event description:\\r\\n[entityform:field-placeholder-event-descript]\\r\\n\\r\\nTo approve just this date request:  [site:url]\\/approve-date-request\\/[entityform:entityform-id]\\r\\nTo see the list of all pending requests: [site:url]\\/approve-date-requests",
            "from" : "[entityform:field-email-address]",
            "language" : [ "" ]
          }
        }
      ]
    }
  }');
  $items['rules_notify_submitter_of_approved_calendar_date_request'] = entity_import('rules_config', '{ "rules_notify_submitter_of_approved_calendar_date_request" : {
      "LABEL" : "Notify submitter of approved calendar date request",
      "PLUGIN" : "rule",
      "TAGS" : [ "entityform submission" ],
      "REQUIRES" : [ "rules" ],
      "USES VARIABLES" : {
        "entityform" : { "label" : "Submitted Entityform", "type" : "entityform" },
        "entityform_type" : { "label" : "Entityform Type", "type" : "entityform_type" }
      },
      "IF" : [
        { "entity_has_field" : { "entity" : [ "entityform" ], "field" : "field_approved_event" } },
        { "NOT data_is_empty" : { "data" : [ "entityform:field-approved-event" ] } }
      ],
      "DO" : [
        { "mail" : {
            "to" : "\\u003Ccalendar@westkingdom.org\\u003E, \\u003Cchronicler@westkingdom.org\\u003E, \\u003Cwebminister@westkingdom.org\\u003E, \\u003Cseneschal@westkingdom.org\\u003E, [entityform:field_email_address]",
            "subject" : "APPROVED date request: [entityform:field-event-name]",
            "message" : "Approved for [entityform:field-approved-event:field_date]\\r\\n\\r\\nEvent description page: [entityform:field-approved-event:url]\\r\\n\\r\\nRequested text for event description:\\r\\n\\r\\n[entityform:field-placeholder-event-descript]",
            "from" : "calendar@westkingdom.org",
            "language" : [ "" ]
          }
        }
      ]
    }
  }');
  $items['rules_og_member_active'] = entity_import('rules_config', '{ "rules_og_member_active" : {
      "LABEL" : "OG member subscribe (Active)",
      "PLUGIN" : "reaction rule",
      "ACTIVE" : false,
      "REQUIRES" : [ "rules", "og" ],
      "ON" : [ "og_user_insert" ],
      "IF" : [
        { "data_is" : { "data" : [ "og-membership:state" ], "value" : "1" } },
        { "entity_is_of_type" : { "entity" : [ "og-membership:group" ], "type" : "node" } }
      ],
      "DO" : [
        { "variable_add" : {
            "USING" : { "type" : "node", "value" : [ "og-membership:group" ] },
            "PROVIDE" : { "variable_added" : { "group" : "Added variable" } }
          }
        },
        { "mail" : {
            "to" : [ "account:mail" ],
            "subject" : "Your membership request was approved for \\u0027[group:title]\\u0027\\r\\n",
            "message" : "[account:name],\\r\\n\\r\\nYou are now a member in the group \\u0027[group:title]\\u0027 located at [group:url]"
          }
        },
        { "mail" : {
            "to" : [ "group:author:mail" ],
            "subject" : "[account:name] joined [group:title]",
            "message" : "[group:author:name],\\r\\n\\r\\n[account:name] joined [group:title] in [group:url]"
          }
        }
      ]
    }
  }');
  $items['rules_og_member_pending'] = entity_import('rules_config', '{ "rules_og_member_pending" : {
      "LABEL" : "OG member subscribe (Pending)",
      "PLUGIN" : "reaction rule",
      "ACTIVE" : false,
      "REQUIRES" : [ "rules", "og" ],
      "ON" : [ "og_user_insert" ],
      "IF" : [
        { "data_is" : { "data" : [ "og-membership:state" ], "value" : "2" } },
        { "entity_is_of_type" : { "entity" : [ "og-membership:group" ], "type" : "node" } }
      ],
      "DO" : [
        { "variable_add" : {
            "USING" : { "type" : "node", "value" : [ "og-membership:group" ] },
            "PROVIDE" : { "variable_added" : { "group" : "Added variable" } }
          }
        },
        { "mail" : {
            "to" : [ "account:mail" ],
            "subject" : "Your membership request for \\u0027[group:title]\\u0027",
            "message" : "[account:name],\\r\\n\\r\\nYour membership to group \\u0027[group:title]\\u0027 located at [group:url] is pending approval."
          }
        },
        { "mail" : {
            "to" : [ "group:author:mail" ],
            "subject" : "[account:name] membership request [group:title]",
            "message" : "[group:author:name],\\r\\n\\r\\n[account:name] requests membership for group \\u0027[group:title]\\u0027 in [group:url].\\r\\n\\r\\n[og_membership:og-membership-request]"
          }
        }
      ]
    }
  }');
  $items['rules_og_new_content'] = entity_import('rules_config', '{ "rules_og_new_content" : {
      "LABEL" : "OG new content notification",
      "PLUGIN" : "reaction rule",
      "ACTIVE" : false,
      "REQUIRES" : [ "og", "rules" ],
      "ON" : [ "node_insert" ],
      "IF" : [ { "og_entity_is_group_content" : { "entity" : [ "node" ] } } ],
      "DO" : [
        { "og_get_members" : {
            "USING" : { "group_content" : [ "node" ] },
            "PROVIDE" : { "group_members" : { "group_members" : "List of group members" } }
          }
        },
        { "LOOP" : {
            "USING" : { "list" : [ "group-members" ] },
            "ITEM" : { "list_item" : "Current list item" },
            "DO" : [
              { "mail" : {
                  "to" : [ "list-item:mail" ],
                  "subject" : "New post in group",
                  "message" : "Hello [list-item:name],\\r\\n\\r\\nThere is a new post called [node:title] that belongs to one of the groups you are subscribed to.\\r\\n\\r\\n[site:name]\\r\\n",
                  "from" : [ "" ]
                }
              }
            ]
          }
        }
      ]
    }
  }');
  return $items;
}
